<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Creational Patterns on COMP2511 Musings</title><link>/categories/creational-patterns/</link><description>Recent content in Creational Patterns on COMP2511 Musings</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Andrew Wong (z5206677)</copyright><lastBuildDate>Sun, 17 Nov 2019 20:51:02 +1100</lastBuildDate><atom:link href="/categories/creational-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Singleton Pattern</title><link>/post/singleton-pattern/</link><pubDate>Sun, 17 Nov 2019 20:51:02 +1100</pubDate><guid>/post/singleton-pattern/</guid><description>Only allows one instance of the class to exist.</description></item><item><title>Builder Pattern</title><link>/post/builder-pattern/</link><pubDate>Sun, 17 Nov 2019 20:42:22 +1100</pubDate><guid>/post/builder-pattern/</guid><description>The builder pattern lets users construct complex objects step by step.</description></item><item><title>Abstract Factory Method</title><link>/post/abstract-factory-method/</link><pubDate>Sun, 17 Nov 2019 20:37:23 +1100</pubDate><guid>/post/abstract-factory-method/</guid><description>Similar to the factory method, the abstract factory method allows us produce families of related objects without needing to specify their concrete class.</description></item><item><title>Factory Method</title><link>/post/factory-method/</link><pubDate>Sun, 17 Nov 2019 20:23:36 +1100</pubDate><guid>/post/factory-method/</guid><description>Provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created</description></item></channel></rss>